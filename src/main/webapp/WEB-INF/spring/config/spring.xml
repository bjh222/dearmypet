<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- mybatis 및 DB 설정 -->
	<bean name="SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		c:sqlSessionFactory-ref="SqlSessionFactoryBean" />

	<!-- sqlsessionFactroybean 설정 -->
	<!--
		mapperLocations을 통해 sql매퍼파일들을 등록한다.
		대신 configLocation에 등록된 xml파일에서 <mappers><mapper resource="매퍼파일.xml">은 사용안한다.
	 -->
 	<bean name="SqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:net/dearmypet/webapp/mybatis/mybatis-config.xml" />
		<property name="dataSource" ref="BasicDataSourceclass" />
		<property name="mapperLocations"  value="classpath:net/dearmypet/webapp/mybatis/*Mapper.xml" />
	</bean>


	<!-- BasicDataSourceclass BEAN -->
 	<bean name="BasicDataSourceclass" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/heroku_93dd468daebac93?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
		<property name="maxTotal" value="50" />
	</bean>
 
	<!-- 한글처리 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" c:defaultCharset="UTF-8" />
		</mvc:message-converters>
	</mvc:annotation-driven>



	<!-- bean anotation 스캔 -->
	<context:component-scan base-package="net.dearmypet.webapp" />
	<!-- 등록 페이지 연결 -->

	<!-- 메인 페이지 연결 -->
	<mvc:view-controller path="/main.dmp" view-name="main.tiles" />
	<!-- 회원가입 페이지 -->
	<!-- <mvc:view-controller path="/Member/registerMember.dmp" view-name="Member/registerMember.tiles" /> -->
	<!-- test -->
	<mvc:view-controller path="/Member/memberList.dmp" view-name="Member/memberList.tiles" />

	<!-- exception 메시지 property -->
	<!-- <bean class="org.springframework.context.support.ResourceBundleMessageSource"
		name="messageSource" p:basename="net.dearmypet.webapp.exception.error_message" /> -->

	
	<!-- post방식으로 이동시 캐시삭제 -->
	<mvc:interceptors>
		<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
		</bean>
	</mvc:interceptors>

	<!-- 프로젝트 관련 view 설정 -->
	<!-- View Resolver 관련 설정 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="1" />
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" p:order="2" />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="3" />


	<!-- Tiles 설정 -->
	<bean name="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/spring/config/tiles-defs.xml</value>
			</list>
		</property>
	</bean>




	<!-- 파일 자원 관련 패스 설정 -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->

	<!-- 파일 업로드 -->
	<!-- <context:component-scan base-package="spring.fileup.controller"/>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" /> -->
	<!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="1" />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="2" /> -->
	
</beans>